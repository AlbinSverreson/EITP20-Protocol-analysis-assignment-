theory assignment
begin

builtins: hashing, asymmetric-encryption, diffie-hellman, bilinear-pairing

//Register public key
rule Register_pk:
    [ Fr(~ltkA) ] 
  -->
    [ !Ltk($A, ~ltkA),
      !Pk($A, pk(~ltkA)),
      Out(pk(~ltkA))
    ]
rule Reveal_ltk:
  [ !Ltk($A, ~ltkA) ] 
  --[ Reveal($A) ]-> 
  [ Out(~ltkA) ]

rule dh_init_A:
    [ !Ltk( A, ~ltkA), Fr(~id) ]
    --[ Create(A, ~id), Role('A') ]->
    [ St_A_1(A, ~id, ~ltkA) ]

rule dh_init_B:
    [ !Ltk(B, ~ltkB), Fr(~id) ]
    --[ Create(B, ~id), Role('B') ]->
    [ St_B_1(B, ~id, ~ltkB) ]

rule dh_send_m:
    let
        M = ('g'^~X)^~ltkA
    in
    [St_A_1(A, ~id, ~ltkA), Fr(~X), !Pk(B, pkB)] 
    --[ Send_to_B(A, aenc(M, pkB)), Secret(B, M), Honest(A), Honest(B), Role('A') ]->
    [ St_A_2(A, ~id, ~ltkA, B, pkB, M, ~X ), Out(aenc(M, pkB)) ]

rule dh_receive_m:
    [ St_B_1(B, ~id, ~ltkB), In(aenc(M, pkB)) ]
    --[Receive_M(B, aenc(M, pkB)), Secret(B, M), Honest(B), Honest($A), Role('B') ]->
    [St_B_2(B, ~id, ~ltkB, M) ]

rule dh_send_n:
    let
        N = ('g'^~Y)^~ltkB
    in
    [St_B_2(B, ~id, ~ltkB, M), Fr(~Y), !Pk(A, pkA)] 
    --[ Send_to_A(B, aenc(N, pkA)), Secret(A, N), Honest(A), Honest(B), Role('B'), Running(A, B, <'resp', M, N>) ]->
    [ St_B_3(B, ~id, ~ltkB, A, pkA, M, N, ~Y), Out(aenc(N, pkA)) ]

rule dh_receive_n: 
    [ St_A_2(A, ~id, ~ltkA, B, pkB, M, ~X), In(aenc(N, pkA)) ]
    --[Receive_N( A, aenc(N, pkA)), Secret(A, N), Honest(A), Honest(B), Role('A'), Commit(A, B, <'resp', M, N>) ]->
    [St_A_3(A, ~id, ~ltkA, B, pkB, M, N, ~X) ]

rule A_create_session:
    let
        Za = h(pmult((pkB^~X)^~ltkA, N^~ltkA))
    in
    [St_A_3(A, ~id, ~ltkA, B, pkB, M, N, ~X) ]
    --[Create_Za(Za)]->
    [St_A_4(A, ~id, ~ltkA, B, pkB, M, N, ~X, Za)]

rule B_create_session:
    let
        Zb = h(pmult((pkA^~Y)^~ltkB, M^~ltkB))
    in
    [St_B_3(B, ~id, ~ltkB, A, pkA, M, N, ~Y) ]
    --[Create_Zb(Zb)]->
    [St_B_4(B, ~id, ~ltkB, A, pkA, M, N, ~Y, Zb)]


lemma secrecy:
  "All A x #i.
  Secret(A,x) @i ==>
  not (Ex #j. K(x)@j)
  | (Ex X #r. Reveal(X)@r & Honest(X) @i)"

end
